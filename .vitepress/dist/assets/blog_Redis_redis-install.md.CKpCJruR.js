import{_ as i,c as a,o as e,ag as t}from"./chunks/framework.CDhRSyRB.js";const c=JSON.parse('{"title":"Redis单机部署","description":"","frontmatter":{},"headers":[],"relativePath":"blog/Redis/redis-install.md","filePath":"blog/Redis/redis-install.md"}'),n={name:"blog/Redis/redis-install.md"};function h(r,s,l,d,p,k){return e(),a("div",null,s[0]||(s[0]=[t(`<h1 id="redis单机部署" tabindex="-1">Redis单机部署 <a class="header-anchor" href="#redis单机部署" aria-label="Permalink to &quot;Redis单机部署&quot;">​</a></h1><p>redis 是最常用的缓存数据库（正确说是中间件），虽然redis的安装很简单，网上也一大堆，但是为了便于后面继续写 redis 的集群部署，这里就记录一下单机部署 redis 的方式。</p><h2 id="linux-安装" tabindex="-1">Linux 安装 <a class="header-anchor" href="#linux-安装" aria-label="Permalink to &quot;Linux 安装&quot;">​</a></h2><p>本文安装系统为CentOS7.8</p><h3 id="下载安装包" tabindex="-1">下载安装包 <a class="header-anchor" href="#下载安装包" aria-label="Permalink to &quot;下载安装包&quot;">​</a></h3><p>访问官网安装包下载地址：<a href="https://redis.io/download/#redis-downloads" target="_blank" rel="noreferrer">https://redis.io/download/#redis-downloads</a></p><p>按照自己的系统选择对应的安装包即可，不如这里我需要选择的是CentOS7的x86版本</p><p><img src="https://cdn.jsdelivr.net/gh/Hopetree/blog-img@main/2023/10/redis-download%20%281%29.png" alt="redis安装包下载"></p><p>复制下载地址，使用wget命令下载（这里使用-O参数自定义一下包的名称）：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -O</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> redis-pkg.tgz</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://packages.redis.io/redis-stack/redis-stack-server-7.2.0-v4.rhel7.x86_64.tar.gz?_gl=Django</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">1qn2s6n</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">_ga</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">MTIwNjcwNTA1OS4xNjk4MzcxODAw</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">_ga_8BKGRQKRPV</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">MTY5ODM3MTc5OS4xLjAuMTY5ODM3MTgwOS41MC4wLjA.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">_gcl_au</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">NTc2MjEzMjA0LjE2OTgzNzE4MDA.</span></span></code></pre></div><h3 id="解压安装包" tabindex="-1">解压安装包 <a class="header-anchor" href="#解压安装包" aria-label="Permalink to &quot;解压安装包&quot;">​</a></h3><p>将下载的安装包解压，可以得到一个类似redis-stack-server-7.2.0-v4的目录</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tar</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -zxvf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> redis-pkg.tgz</span></span></code></pre></div><p>将目录移动到安装目录</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> redis-stack-server-7.2.0-v4</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/local/redis</span></span></code></pre></div><h3 id="启动-redis-服务" tabindex="-1">启动 redis 服务 <a class="header-anchor" href="#启动-redis-服务" aria-label="Permalink to &quot;启动 redis 服务&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/local/redis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./bin/redis-server</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./etc/redis-stack.conf</span></span></code></pre></div><p>执行之后redis就在后台运行了，这个redis-stack.conf文件是安装包自带的配置。</p><p>更多的配置，可以查看官方的默认配置文档：<a href="https://redis.io/docs/management/config/" target="_blank" rel="noreferrer">https://redis.io/docs/management/config/</a></p><p>比如7.2版本的redis.conf文件：<a href="https://raw.githubusercontent.com/redis/redis/7.2/redis.conf" target="_blank" rel="noreferrer">https://raw.githubusercontent.com/redis/redis/7.2/redis.conf</a></p><h3 id="登录-redis" tabindex="-1">登录 redis <a class="header-anchor" href="#登录-redis" aria-label="Permalink to &quot;登录 redis&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@zero-Django redis]# cd /var/local/redis &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./bin/redis-cli</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">127.0.0.Django:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>执行之后就登录到redis的shell命令行了。</p>`,23)]))}const g=i(n,[["render",h]]);export{c as __pageData,g as default};
