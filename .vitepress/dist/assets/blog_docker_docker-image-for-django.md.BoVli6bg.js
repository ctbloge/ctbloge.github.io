import{_ as i,c as a,o as n,ag as h}from"./chunks/framework.CDhRSyRB.js";const g=JSON.parse('{"title":"分享一个给 Django 镜像瘦身 50% 的经验","description":"","frontmatter":{},"headers":[],"relativePath":"blog/docker/docker-image-for-django.md","filePath":"blog/docker/docker-image-for-django.md"}'),l={name:"blog/docker/docker-image-for-django.md"};function t(p,s,k,e,F,r){return n(),a("div",null,s[0]||(s[0]=[h(`<h1 id="分享一个给-django-镜像瘦身-50-的经验" tabindex="-1">分享一个给 Django 镜像瘦身 50% 的经验 <a class="header-anchor" href="#分享一个给-django-镜像瘦身-50-的经验" aria-label="Permalink to &quot;分享一个给 Django 镜像瘦身 50% 的经验&quot;">​</a></h1><p>这两天搞了一个专门玩容器的虚拟机，然后就重新构建了一些我博客的镜像，并且成功将容器体检减少了接近 50%，由于之前就尝试过瘦身，但是由于依赖关系导致失败，这次成功了，所以这篇文章就分享一下这次成功瘦身的经验。</p><h2 id="先看效果" tabindex="-1">先看效果 <a class="header-anchor" href="#先看效果" aria-label="Permalink to &quot;先看效果&quot;">​</a></h2><p>先直接来看一下瘦身前后的效果对比吧，瘦身的目的肯定是为了在不影响使用的前提下减少空间，这里我主要记录了两个数据，分别是镜像大小和容器运行的内存消耗情况。</p><h3 id="镜像大小对比" tabindex="-1">镜像大小对比 <a class="header-anchor" href="#镜像大小对比" aria-label="Permalink to &quot;镜像大小对比&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@home-203 izone-docker]# docker images</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">REPOSITORY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       TAG</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">             IMAGE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ID</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       CREATED</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          SIZE</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hopetree/izone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   latest</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          0b217ebea46f</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   32</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> minutes</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ago</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   Django.13GB</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hopetree/izone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   lts</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">             d21afda2b967</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   18</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hours</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ago</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     623MB</span></span></code></pre></div><p>瘦身前镜像大小为 1.13GB，瘦身后为 623MB</p><h3 id="容器内存占用对比" tabindex="-1">容器内存占用对比 <a class="header-anchor" href="#容器内存占用对比" aria-label="Permalink to &quot;容器内存占用对比&quot;">​</a></h3><p>先看一下空载的内存占用，不启动服务的时候内存占用为 480M：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@home-203 izone-docker]# free -h</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">              total</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        used</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        free</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      shared</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  buff/cache</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   available</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mem:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">           3.7G</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        480M</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        896M</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        8.4M</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        2.4G</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        2.9G</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Swap:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          2.0G</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        Django.5M</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        2.0G</span></span></code></pre></div><p>在看一下启动容器（izone项目，不仅仅只有Django容器），内存占用变成了 1201M，也就是项目需要 720M 左右。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@home-203 izone-docker]# free -m</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">              total</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        used</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        free</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      shared</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  buff/cache</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   available</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mem:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">           3788</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        1201</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">         157</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">           8</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        2429</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        2295</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Swap:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">          2047</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">           1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        2046</span></span></code></pre></div><p>在看一下使用瘦身后的镜像的内存占用情况，有点可惜，内存占用是一样的：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@home-203 izone-docker]# free -m</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">              total</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        used</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        free</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      shared</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  buff/cache</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   available</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mem:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">           3788</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        1200</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">         157</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">           8</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        2431</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        2297</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Swap:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">          2047</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">           1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        2046</span></span></code></pre></div><h3 id="小结" tabindex="-1">小结 <a class="header-anchor" href="#小结" aria-label="Permalink to &quot;小结&quot;">​</a></h3><p>经过对比，瘦身前后镜像的大小是有巨大提升，这种提升对于镜像的上传和归档都是有很大意义的，但是可惜的是容器运行的内存占用没有提升，但是相比执行资源占用应该还是有提升的。</p><table tabindex="0"><thead><tr><th></th><th>镜像大小</th><th>容器内存占用</th></tr></thead><tbody><tr><td>瘦身前</td><td>1.13GB</td><td>720M</td></tr><tr><td>瘦身后</td><td>623M</td><td>720M</td></tr><tr><td>前后对比</td><td>减少47%</td><td>持平</td></tr></tbody></table><h2 id="镜像瘦身的方法" tabindex="-1">镜像瘦身的方法 <a class="header-anchor" href="#镜像瘦身的方法" aria-label="Permalink to &quot;镜像瘦身的方法&quot;">​</a></h2><p>其实给镜像瘦身很简单，就是使用一个更加轻量的基础镜像就行，但是并不是越轻量越好。</p><h3 id="镜像的选择" tabindex="-1">镜像的选择 <a class="header-anchor" href="#镜像的选择" aria-label="Permalink to &quot;镜像的选择&quot;">​</a></h3><p>经常使用 docker 的都知道，大部分的基础镜像多有很多个版本，比如 python 镜像，不同的基础镜像的大小也是不同的。</p><p><img src="https://cdn.jsdelivr.net/gh/Hopetree/blog-img@main/2024/04/202404211620302.png" alt="python"></p><p>一般镜像会有三种基本的版本：</p><ol><li>默认版本：这种版本一般都是最大的，使用Debian的bullseye做为默认镜像基础系统</li><li>slim 版本：瘦身版本，相对默认版本小一些，同时也缺一些非常用的依赖</li><li>alpine 版本：最小镜像，体检很小，但是一般只能运行原始的代码，如果有依赖的话要么自己安装，要么就直接无法运行，很适合无依赖的软件运行，比如Nginx，redis这种</li></ol><h3 id="解决-mysqlclient-安装问题" tabindex="-1">解决 mysqlclient 安装问题 <a class="header-anchor" href="#解决-mysqlclient-安装问题" aria-label="Permalink to &quot;解决 mysqlclient 安装问题&quot;">​</a></h3><p>我将Python镜像从默认的 <code>python:3.9</code> 换成了 <code>python:3.9-slim</code>，虽然可以减小镜像大小，但是会发现安装 mysqlclient==2.0.3 的时候会报错，具体报错如下：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Collecting</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mysqlclient==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2.0.3</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  Downloading</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://mirrors.aliyun.com/pypi/packages/3c/df/59cd2fa5e48d0804d213bdcb1acb4d08c403b61c7ff7ed4dd4a6a2deb3f7/mysqlclient-2.0.3.tar.gz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (88 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">kB</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 88.9/88.9</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kB</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Django.9</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> MB/s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> eta</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 0:00:00</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  Preparing</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> metadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (setup.py): started</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  Preparing</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> metadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (setup.py): finished with status </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;error&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  error:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> subprocess-exited-with-error</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  ×</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Django</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> setup.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> egg_info</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> did</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> not</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> successfully.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exit</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> code:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  ╰─</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; [16 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">lines</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> of</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> output]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      mysql_config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --version</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      /bin/sh:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Django:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mysql_config:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> not</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> found</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      mariadb_config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --version</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      /bin/sh:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Django:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mariadb_config:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> not</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> found</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      mysql_config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --libs</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      /bin/sh:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Django:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mysql_config:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> not</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> found</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      Traceback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (most </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">recent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> call</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> last</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        File</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;&lt;string&gt;&quot;,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> line</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 2,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> in</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">modul</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        File</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;&lt;pip-setuptools-caller&gt;&quot;,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> line</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 34,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> in</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">modul</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        File</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;/tmp/pip-install-i45k40lm/mysqlclient_bdf5e6c2ea1043cd9286023d10d10ba8/setup.py&quot;,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> line</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> personal-notes,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> in</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">modul</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">          metadata,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> options</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get_config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        File</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;/tmp/pip-install-i45k40lm/mysqlclient_bdf5e6c2ea1043cd9286023d10d10ba8/setup_posix.py&quot;,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> line</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 70,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get_config</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">          libs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mysql_config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;libs&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        File</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;/tmp/pip-install-i45k40lm/mysqlclient_bdf5e6c2ea1043cd9286023d10d10ba8/setup_posix.py&quot;,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> line</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 31,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mysql_config</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">          raise</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> OSError</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;{} not found&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.format(_mysql_config_path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      OSError:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mysql_config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> not</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> found</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      [end of output]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  note:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> This</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> error</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> originates</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> subprocess,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> and</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> likely</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> not</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> problem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> with</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pip.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">error:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> metadata-generation-failed</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">×</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Encountered</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> error</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> while</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> generating</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> package</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> metadata.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">╰─</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">See</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> above</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> output.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">note:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> This</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> an</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> issue</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> with</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> package</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mentioned</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> above,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> not</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pip.</span></span></code></pre></div><p>这个情况其实之前我就知道，但是没有去找解决方案，为了方便直接使用的默认的镜像。</p><p>这次找到了方案，只需要安装一些依赖软件就可以（要替换debian源）：</p><div class="language-dockerfile vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 安装sqlclient的依赖，slim镜像中缺少</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">RUN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> apt-get update &amp;&amp; apt-get install -y \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    default-libmysqlclient-dev \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    build-essential \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &amp;&amp; rm -rf /var/lib/apt/lists/*</span></span></code></pre></div><p>可以参考：<a href="https://www.volcengine.com/theme/7380144-R-7-1" target="_blank" rel="noreferrer">如何在python:3-slim Docker镜像中安装mysqlclient而不使镜像变得臃肿？</a></p><h3 id="充分的验证" tabindex="-1">充分的验证 <a class="header-anchor" href="#充分的验证" aria-label="Permalink to &quot;充分的验证&quot;">​</a></h3><p>换了基础镜像之后，镜像的构建没问题大概率在运行的时候没问题，但是也不一定，所以需要进行充分验证才行。</p><h3 id="新的-dockerfile" tabindex="-1">新的 Dockerfile <a class="header-anchor" href="#新的-dockerfile" aria-label="Permalink to &quot;新的 Dockerfile&quot;">​</a></h3><p>查看一下我使用 slim 基础镜像的 Dockerfile 文件吧：</p><div class="language-dockerfile vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> python:3.9-slim</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 国内用户构建命令参考</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># DOCKER_BUILDKIT=0 docker build --build-arg pip_index_url=http://mirrors.aliyun.com/pypi/simple/ --build-arg pip_trusted_host=mirrors.aliyun.com --build-arg debian_host=mirrors.ustc.edu.cn -f Dockerfile-slim -t hopetree/izone:lts .</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 默认的系统源和pypi源都使用国外的，国内构建的时候可以用命令行参数替换成国内源</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ARG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> debian_host=deb.debian.org</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ARG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pip_index_url=https://pypi.org/simple</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ARG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pip_trusted_host=pypi.org</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ENV</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PYTHONUNBUFFERED=1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WORKDIR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /opt/cloud/izone</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 替换系统源，要注意这里不同版本的debian源文件不同</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">RUN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sed -i </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;s/deb.debian.org/\${debian_host}/g&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /etc/apt/sources.list.d/debian.sources</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 安装sqlclient的依赖，slim镜像中缺少</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">RUN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> apt-get update &amp;&amp; apt-get install -y \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    default-libmysqlclient-dev \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    build-essential \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &amp;&amp; rm -rf /var/lib/apt/lists/*</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">RUN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">COPY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> requirements.txt requirements.txt</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">RUN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pip install --no-cache-dir -r requirements.txt --index-url $pip_index_url --trusted-host $pip_trusted_host</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">RUN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mkdir -p log &amp;&amp; chmod -R 755 log</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">COPY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> . .</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置镜像的创建时间，当做网站更新时间</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">RUN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sed -i </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;s/web_update_time=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/web_update_time=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">$(date +&#39;%Y-%m-%d %H:%M&#39;)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/g&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ./apps/blog/templates/blog/base.html</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CMD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;supervisord&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;-n&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;-c&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;supervisord.conf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><h2 id="参考文档" tabindex="-1">参考文档 <a class="header-anchor" href="#参考文档" aria-label="Permalink to &quot;参考文档&quot;">​</a></h2><ul><li><a href="https://blog.csdn.net/zyy247796143/article/details/124387806" target="_blank" rel="noreferrer">Python Docker 镜像的选择</a></li><li><a href="https://www.volcengine.com/theme/7380144-R-7-1" target="_blank" rel="noreferrer">如何在python:3-slim Docker镜像中安装mysqlclient而不使镜像变得臃肿？</a></li></ul>`,38)]))}const y=i(l,[["render",t]]);export{g as __pageData,y as default};
