import{_ as i,c as a,o as n,ag as e}from"./chunks/framework.CDhRSyRB.js";const g=JSON.parse('{"title":"Redis哨兵模式部署","description":"","frontmatter":{},"headers":[],"relativePath":"blog/Redis/redis-install-sentinel.md","filePath":"blog/Redis/redis-install-sentinel.md"}'),l={name:"blog/Redis/redis-install-sentinel.md"};function t(p,s,h,k,r,d){return n(),a("div",null,s[0]||(s[0]=[e(`<h1 id="redis哨兵模式部署" tabindex="-1">Redis哨兵模式部署 <a class="header-anchor" href="#redis哨兵模式部署" aria-label="Permalink to &quot;Redis哨兵模式部署&quot;">​</a></h1><p>Redis哨兵模式是一种特殊的模式，首先Redis提供了哨兵的命令，哨兵是一个独立的进程，作为进程，它会独立运行。其原理是哨兵通过发送命令，等待Redis服务器响应，从而监控运行的多个Redis实例。本文记录一下搭建Redis哨兵模式集群的步骤。</p><h2 id="环境信息" tabindex="-1">环境信息 <a class="header-anchor" href="#环境信息" aria-label="Permalink to &quot;环境信息&quot;">​</a></h2><p>这里的部署集群为3节点（1主2从3哨兵），系统为CentOS7。</p><table tabindex="0"><thead><tr><th style="text-align:center;">节点IP</th><th style="text-align:center;">作用</th><th style="text-align:center;">端口</th><th style="text-align:center;">备注</th></tr></thead><tbody><tr><td style="text-align:center;">192.168.110.216</td><td style="text-align:center;">redis主节点</td><td style="text-align:center;">6379</td><td style="text-align:center;">默认端口</td></tr><tr><td style="text-align:center;">192.168.110.217</td><td style="text-align:center;">redis从节点</td><td style="text-align:center;">6379</td><td style="text-align:center;">默认端口</td></tr><tr><td style="text-align:center;">192.168.110.218</td><td style="text-align:center;">redis从节点</td><td style="text-align:center;">6379</td><td style="text-align:center;">默认端口</td></tr><tr><td style="text-align:center;">192.168.110.216</td><td style="text-align:center;">redis-sentinel</td><td style="text-align:center;">26379</td><td style="text-align:center;">默认端口</td></tr><tr><td style="text-align:center;">192.168.110.217</td><td style="text-align:center;">redis-sentinel</td><td style="text-align:center;">26379</td><td style="text-align:center;">默认端口</td></tr><tr><td style="text-align:center;">192.168.110.218</td><td style="text-align:center;">redis-sentinel</td><td style="text-align:center;">26379</td><td style="text-align:center;">默认端口</td></tr></tbody></table><p>这个是搭建之后的架构：</p><p><img src="https://cdn.jsdelivr.net/gh/Hopetree/blog-img@main/2023/10/redis-sentinel%20%281%29.png" alt=""></p><h2 id="redis主备搭建" tabindex="-1">redis主备搭建 <a class="header-anchor" href="#redis主备搭建" aria-label="Permalink to &quot;redis主备搭建&quot;">​</a></h2><h3 id="安装redis" tabindex="-1">安装redis <a class="header-anchor" href="#安装redis" aria-label="Permalink to &quot;安装redis&quot;">​</a></h3><p>安装redis的步骤可以参考redis单机安装的文章：<a href="https://tendcode.com/subject/article/redis-install/" title="Redis单机部署" target="_blank" rel="noreferrer">Redis单机部署</a></p><p>安装之后的redis的目录为/var/local/redis</p><h3 id="创建redis配置文件" tabindex="-1">创建redis配置文件 <a class="header-anchor" href="#创建redis配置文件" aria-label="Permalink to &quot;创建redis配置文件&quot;">​</a></h3><p>先创建本地数据存放的目录/data/redis</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /data/redis</span></span></code></pre></div><p>在redis的安装目录的etc下面创建一个自定义的配置文件redis.conf作为启动文件，内容如下：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 监听端口</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">port</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 6379</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 守护进程的形式运行</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">daemonize</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yes</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 进程PID</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pidfile</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/run/redis.pid</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 日志文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">logfile</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/log/redis.log</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 指定本地数据库存放目录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /data/redis</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置密码，主备集群设置密码需要同时设置如下两个字段</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">requirepass</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> redis666</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">masterauth</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> redis666</span></span></code></pre></div><p>上面的配置内容是3个节点都要设置的相同配置内容，另外需要在两个从节点的配置中添加额外的配置，如下（其中配置的就是主节点的IP和监听端口）：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">replicaof</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 192.168.110.216</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 6379</span></span></code></pre></div><h3 id="启动redis集群" tabindex="-1">启动redis集群 <a class="header-anchor" href="#启动redis集群" aria-label="Permalink to &quot;启动redis集群&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/local/redis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./bin/redis-server</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./etc/redis.conf</span></span></code></pre></div><h3 id="登录redis查看集群状态" tabindex="-1">登录redis查看集群状态 <a class="header-anchor" href="#登录redis查看集群状态" aria-label="Permalink to &quot;登录redis查看集群状态&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/local/redis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./bin/redis-cli</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --pass</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> redis666</span></span></code></pre></div><p>登录主节点（192.168.110.216）之后在命令行中执行查询命令，查看返回如下：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@zero-Django redis]# cd /var/local/redis &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./bin/redis-cli</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --pass</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> redis666</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Warning:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Using</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> password</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> with</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;-a&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> or</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;-u&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> option</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> on</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> command</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> line</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> interface</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> may</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> not</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> be</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> safe.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">127.0.0.Django:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">info</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> replication</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Replication</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">role:master</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">connected_slaves:2</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">slave0:ip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=192.168.110.217,port=6379,state=online,offset=420,lag=1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">slave1:ip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=192.168.110.218,port=6379,state=online,offset=420,lag=1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">master_failover_state:no-failover</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">master_replid:97669e0e33b450f8f39ee73bb1d499b03cc1f4ef</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">master_replid2:0000000000000000000000000000000000000000</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">master_repl_offset:420</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">second_repl_offset:-Django</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">repl_backlog_active:Django</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">repl_backlog_size:1048576</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">repl_backlog_first_byte_offset:Django</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">repl_backlog_histlen:420</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">127.0.0.Django:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>这里是可以看到从节点的信息和状态的。</p><p>登录从节点之后执行同样的命令查看到的信息如下：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">127.0.0.Django:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">info</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> replication</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Replication</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">role:slave</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">master_host:192.168.110.216</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">master_port:6379</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">master_link_status:up</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">master_last_io_seconds_ago:Django</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">master_sync_in_progress:0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">slave_read_repl_offset:378</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">slave_repl_offset:378</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">slave_priority:100</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">slave_read_only:Django</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">replica_announced:Django</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">connected_slaves:0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">master_failover_state:no-failover</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">master_replid:97669e0e33b450f8f39ee73bb1d499b03cc1f4ef</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">master_replid2:0000000000000000000000000000000000000000</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">master_repl_offset:378</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">second_repl_offset:-Django</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">repl_backlog_active:Django</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">repl_backlog_size:1048576</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">repl_backlog_first_byte_offset:Django</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">repl_backlog_histlen:378</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">127.0.0.Django:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>这里可以看到主节点的信息和状态。</p><p>此时可以在主节点写入一些数据(从节点默认只读，不能写)，然后去从节点查询，能够正常查询到说明主从配置完好。</p><p>至此，redis主从集群已经配置完成，下面需要做的就是搭建哨兵。</p><h2 id="redis哨兵搭建" tabindex="-1">redis哨兵搭建 <a class="header-anchor" href="#redis哨兵搭建" aria-label="Permalink to &quot;redis哨兵搭建&quot;">​</a></h2><p>redis安装之后自带redis-sentinel，所以不需要单独安装。</p><h3 id="创建redis-sentinel配置" tabindex="-1">创建redis-sentinel配置 <a class="header-anchor" href="#创建redis-sentinel配置" aria-label="Permalink to &quot;创建redis-sentinel配置&quot;">​</a></h3><p>先创建本地数据目录/data/redis-sentinel</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /data/redis-sentinel</span></span></code></pre></div><p>然后在redis安装目录的etc中创建一个sentinel.conf文件，内容如下：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/local/redis/etc/sentinel.conf</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 监听端口</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">port</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 26379</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 守护进程的形式运行</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">daemonize</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yes</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 进程PID</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pidfile</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/run/redis-sentinel.pid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 日志文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">logfile</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/log/sentinel.log</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 工作目录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /data/redis-sentinel</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 这里定义主库的IP和端口，还有最后的2表示要达到2台sentinel认同才认为主库已经挂掉</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sentinel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> monitor</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> redismaster</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 192.168.110.216</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 6379</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 主库在30000毫秒（即30秒）内没有反应就认为主库挂掉（即主观失效）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sentinel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> down-after-milliseconds</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> redismaster</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 30000</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 若新主库当选后，允许最大可以同时从新主库同步数据的从库数</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sentinel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> parallel-syncs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> redismaster</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 若在指定时间（即180000毫秒，即180秒）内没有实现故障转移，则会自动再发起一次</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sentinel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> failover-timeout</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> redismaster</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 180000</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sentinel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> deny-scripts-reconfig</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yes</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 如果设置了密码，这块是要写的</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sentinel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> auth-pass</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> redismaster</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> redis666</span></span></code></pre></div><p>更多配置可以见官方文档<a href="https://redis.io/docs/management/sentinel/" target="_blank" rel="noreferrer">https://redis.io/docs/management/sentinel/</a></p><h3 id="启动哨兵" tabindex="-1">启动哨兵 <a class="header-anchor" href="#启动哨兵" aria-label="Permalink to &quot;启动哨兵&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/local/redis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./bin/redis-sentinel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./etc/sentinel.conf</span></span></code></pre></div><h3 id="登录查看哨兵状态" tabindex="-1">登录查看哨兵状态 <a class="header-anchor" href="#登录查看哨兵状态" aria-label="Permalink to &quot;登录查看哨兵状态&quot;">​</a></h3><p>在任意一个节点上面登录到命令行中，执行命令查询哨兵信息：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@zero-Django redis]# cd /var/local/redis &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./bin/redis-cli</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 26379</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">127.0.0.Django:26379</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">info</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sentinel</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Sentinel</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sentinel_masters:Django</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sentinel_tilt:0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sentinel_tilt_since_seconds:-Django</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sentinel_running_scripts:0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sentinel_scripts_queue_length:0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sentinel_simulate_failure_flags:0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">master0:name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=redismaster,status=ok,address=192.168.110.216:6379,slaves=2,sentinels=3</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">127.0.0.Django:26379</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>这里里面可以看到主库是192.168.110.216:6379，从库有2个节点，哨兵有3个节点。</p><h2 id="高可用验证" tabindex="-1">高可用验证 <a class="header-anchor" href="#高可用验证" aria-label="Permalink to &quot;高可用验证&quot;">​</a></h2><h3 id="主库异常" tabindex="-1">主库异常 <a class="header-anchor" href="#主库异常" aria-label="Permalink to &quot;主库异常&quot;">​</a></h3><p>停掉主库redis，然后再去查看哨兵的信息，可以发现其中一个从库会变成主库：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@zero-Django redis]# cd /var/local/redis &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./bin/redis-cli</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 26379</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">127.0.0.Django:26379</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">info</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sentinel</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Sentinel</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sentinel_masters:Django</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sentinel_tilt:0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sentinel_tilt_since_seconds:-Django</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sentinel_running_scripts:0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sentinel_scripts_queue_length:0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sentinel_simulate_failure_flags:0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">master0:name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=redismaster,status=ok,address=192.168.110.216:6379,slaves=2,sentinels=3</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">127.0.0.Django:26379</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">127.0.0.Django:26379</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">127.0.0.Django:26379</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">info</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sentinel</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Sentinel</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sentinel_masters:Django</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sentinel_tilt:0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sentinel_tilt_since_seconds:-Django</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sentinel_running_scripts:0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sentinel_scripts_queue_length:0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sentinel_simulate_failure_flags:0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">master0:name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=redismaster,status=ok,address=192.168.110.218:6379,slaves=2,sentinels=3</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">127.0.0.Django:26379</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>上面这个查询是停掉主库前和停掉之后查询的结果，可以看到主库自动切换了符合预期）。</p><p>此时登录到新的主库执行集群查询信息，可以看到只剩下一个从库了（符合预期）。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@zero-3 redis]# cd /var/local/redis &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./bin/redis-cli</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --pass</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> redis666</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Warning:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Using</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> password</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> with</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;-a&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> or</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;-u&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> option</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> on</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> command</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> line</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> interface</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> may</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> not</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> be</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> safe.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">127.0.0.Django:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">info</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> replication</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Replication</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">role:master</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">connected_slaves:Django</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">slave0:ip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=192.168.110.217,port=6379,state=online,offset=121765,lag=1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">master_failover_state:no-failover</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">master_replid:724c11c997152694e5e530c535198f9b13ad7a58</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">master_replid2:97669e0e33b450f8f39ee73bb1d499b03cc1f4ef</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">master_repl_offset:121913</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">second_repl_offset:78705</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">repl_backlog_active:Django</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">repl_backlog_size:1048576</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">repl_backlog_first_byte_offset:Django</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">repl_backlog_histlen:121913</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">127.0.0.Django:6379</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>此时重新启动异常的节点，再次查询可以发现原来异常的主库变成了从库（符合预期）。</p><h3 id="从库异常" tabindex="-1">从库异常 <a class="header-anchor" href="#从库异常" aria-label="Permalink to &quot;从库异常&quot;">​</a></h3><p>从库异常的情况就很简单了，主从不会切换，只是从库减少1个实例而已。</p><h2 id="参考文章" tabindex="-1">参考文章 <a class="header-anchor" href="#参考文章" aria-label="Permalink to &quot;参考文章&quot;">​</a></h2><ul><li><a href="https://blog.csdn.net/zhuchunyan_aijia/article/details/118891420" target="_blank" rel="noreferrer">redis哨兵部署</a></li></ul>`,57)]))}const c=i(l,[["render",t]]);export{g as __pageData,c as default};
